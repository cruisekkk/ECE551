Grading at 10/01/2019:14:14:13.535105
For commit ID dd80d7e3fcfe53f3ef8dce2333d360b10ee64790
Grading at Tue Oct  1 10:14:04 EDT 2019
****************testing step1.c*********************
Attempting to compile step1.c -> step1
Looking for int main
Found on line 26, column 1 
Checking that main actually returns a value
Looking for int seq1(int)
Found on line 7, column 1 
Looking for void printSeq1Range(int,int) 
Found on line 12, column 1 
Removing your main and adding ours
Attempting to compile removedmain.c -> removedmain
 - seq1(-93) was Correct
 - seq1(-5) was Correct
 - seq1(-1) was Correct
 - seq1(0) was Correct
 - seq1(1) was Correct
 - seq1(3) was Correct
 - seq1(12) was Correct
 - seq1(96) was Correct
#################################################
Removing your main() and replacing it with our own to test step1(C)
Attempting to compile removedmain.c -> removedmain
printSeq1Range(-99, -100) was Correct
printSeq1Range(-99, -99) was Correct
printSeq1Range(-99, 1) was Correct
printSeq1Range(-99, 6) was Correct
printSeq1Range(-99, 0) was Correct
printSeq1Range(-99, 100) was Correct
printSeq1Range(-3, -100) was Correct
printSeq1Range(-3, -99) was Correct
printSeq1Range(-3, 1) was Correct
printSeq1Range(-3, 6) was Correct
printSeq1Range(-3, 0) was Correct
printSeq1Range(-3, 100) was Correct
printSeq1Range(-1, -100) was Correct
printSeq1Range(-1, -99) was Correct
printSeq1Range(-1, 1) was Correct
printSeq1Range(-1, 6) was Correct
printSeq1Range(-1, 0) was Correct
printSeq1Range(-1, 100) was Correct
printSeq1Range(0, -100) was Correct
printSeq1Range(0, -99) was Correct
printSeq1Range(0, 1) was Correct
printSeq1Range(0, 6) was Correct
printSeq1Range(0, 0) was Correct
printSeq1Range(0, 100) was Correct
printSeq1Range(1, -100) was Correct
printSeq1Range(1, -99) was Correct
printSeq1Range(1, 1) was Correct
printSeq1Range(1, 6) was Correct
printSeq1Range(1, 0) was Correct
printSeq1Range(1, 100) was Correct
printSeq1Range(4, -100) was Correct
printSeq1Range(4, -99) was Correct
printSeq1Range(4, 1) was Correct
printSeq1Range(4, 6) was Correct
printSeq1Range(4, 0) was Correct
printSeq1Range(4, 100) was Correct
printSeq1Range(5, -100) was Correct
printSeq1Range(5, -99) was Correct
printSeq1Range(5, 1) was Correct
printSeq1Range(5, 6) was Correct
printSeq1Range(5, 0) was Correct
printSeq1Range(5, 100) was Correct
printSeq1Range(9, -100) was Correct
printSeq1Range(9, -99) was Correct
printSeq1Range(9, 1) was Correct
printSeq1Range(9, 6) was Correct
printSeq1Range(9, 0) was Correct
printSeq1Range(9, 100) was Correct
printSeq1Range(99, -100) was Correct
printSeq1Range(99, -99) was Correct
printSeq1Range(99, 1) was Correct
printSeq1Range(99, 6) was Correct
printSeq1Range(99, 0) was Correct
printSeq1Range(99, 100) was Correct
#################################################
Removing your seq1/printSeq1Range and testing your main...
Attempting to compile rmfns.c -> rmfns
You only have 2 test cases seq1
You only have 3 test cases printSeq1Range
Step 1 Summary:
   Part A (seq1):                    8 / 8 [ 8 pts]
   Part B+D (main):                  5 / 8 [ 5 pts]
   Part C (printSeq1Range):        54 / 54 [10 pts]
   Code compiled without warnings:     Yes [ 2 pts]
   Main properly returned an int:      Yes [ 2 pts] 
=================================================
Step 1 Total:                              27/30     
=================================================
****************testing step2.c*********************
Attempting to compile step2.c -> step2
Looking for int main
Found on line 28, column 1 
Checking that main actually returns a value
Looking for int seq2(int)
Found on line 7, column 1 
Looking for int int sumSeq2(int,int) 
Found on line 16, column 1 
#################################################
Removing your main() and replacing it with our own to test seq (Part A)
Attempting to compile removedmain.c -> removedmain
seq2(-98) was Correct
seq2(-6) was Correct
seq2(-1) was Correct
seq2(-3) was Correct
seq2(0) was Correct
seq2(1) was Correct
seq2(6) was Correct
seq2(22) was Correct
seq2(102) was Correct
seq2(104) was Correct
#################################################
Removing your seq2/sumSeq2 and testing your main (B+D)...
Attempting to compile rmfns.c -> rmfns
For seq2, you have 5 test cases (2 negative, 2 positive)
For sumSeq, ou have 6 total test cases (2/2)
  o 2 tested for an empty range 
  o 1 tested for a range of size 1 
  o 3 tested for a larger range 
#################################################
Removing your main() and replacing it with our own for sumSeq2(Part C)
Attempting to compile removedmain.c -> removedmain
sumSeq2(-100, -99) was Correct
sumSeq2(-100, -90) was Correct
sumSeq2(-3, 4) was Correct
sumSeq2(-1, 5) was Correct
sumSeq2(-3, 99) was Correct
sumSeq2(-100, 99) was Correct
sumSeq2(0, 0) was Correct
sumSeq2(2, 3) was Correct
sumSeq2(-12, 107) was Correct
sumSeq2(100, 99) was Correct
Step 2 Summary:
   Part A (seq2):                10 / 10 [10 pts]
   Part B+D (main):              10 / 10 [10 pts]
   Part C (sumSeq):              10 / 10 [10 pts]
Code compiled without warnings: YES      [ 3 pts]
=================================================
Step 2 Total:                              33/33     
=================================================
****************testing step3.c*********************
Attempting to compile step3.c -> step3
Looking for int main
Found on line 29, column 1 
Checking that main actually returns a value
Looking for int seq3(int,int)
Found on line 7, column 1 
Looking for int int countEvenInSeq3Range(int,int,int,int) 
Found on line 11, column 1 
#################################################
Removing your main() and replacing it with our own to test step3(A)
Attempting to compile removedmain.c -> removedmain
seq3(-99, -99) was Correct
seq3(-99, -5) was Correct
seq3(-99, 0) was Correct
seq3(-99, 5) was Correct
seq3(-99, 99) was Correct
seq3(-3, -99) was Correct
seq3(-3, -5) was Correct
seq3(-3, 0) was Correct
seq3(-3, 5) was Correct
seq3(-3, 99) was Correct
seq3(-1, -99) was Correct
seq3(-1, -5) was Correct
seq3(-1, 0) was Correct
seq3(-1, 5) was Correct
seq3(-1, 99) was Correct
seq3(0, -99) was Correct
seq3(0, -5) was Correct
seq3(0, 0) was Correct
seq3(0, 5) was Correct
seq3(0, 99) was Correct
seq3(1, -99) was Correct
seq3(1, -5) was Correct
seq3(1, 0) was Correct
seq3(1, 5) was Correct
seq3(1, 99) was Correct
seq3(4, -99) was Correct
seq3(4, -5) was Correct
seq3(4, 0) was Correct
seq3(4, 5) was Correct
seq3(4, 99) was Correct
seq3(5, -99) was Correct
seq3(5, -5) was Correct
seq3(5, 0) was Correct
seq3(5, 5) was Correct
seq3(5, 99) was Correct
seq3(9, -99) was Correct
seq3(9, -5) was Correct
seq3(9, 0) was Correct
seq3(9, 5) was Correct
seq3(9, 99) was Correct
seq3(99, -99) was Correct
seq3(99, -5) was Correct
seq3(99, 0) was Correct
seq3(99, 5) was Correct
seq3(99, 99) was Correct
#################################################
Removing your seq3/countEvenInSeq3Range and testing your main (B+D)...
Attempting to compile rmfn.c -> rmfn
You have 6 total test cases
  o You have 1 test cases where x or y is 0 (1/1)
  o You have 0 test cases with x Negative and y Negative (0/1)
  o You have 1 test cases with x Negative and y Positive (1/1)
  o You have 1 test cases with x Positive and y Negative (1/1)
  o You have 3 test cases with x Positive and y Positive (1/1)
You had 2 test cases with non-empty ranges (1/4)
You had 2 test cases with an empty range (1/1)
#################################################
Removing your main() and replacing it with our own to test step3(C)
Attempting to compile removedmain.c -> removedmain
countEvenInSeq3Range(-99, -100, -5, -99) was Correct
countEvenInSeq3Range(-99, -100, -5, 0) was Correct
countEvenInSeq3Range(-99, -100, -5, 105) was Correct
countEvenInSeq3Range(-99, -100, 0, -99) was Correct
countEvenInSeq3Range(-99, -100, 0, 0) was Correct
countEvenInSeq3Range(-99, -100, 0, 105) was Correct
countEvenInSeq3Range(-99, -100, 20, -99) was Correct
countEvenInSeq3Range(-99, -100, 20, 0) was Correct
countEvenInSeq3Range(-99, -100, 20, 105) was Correct
countEvenInSeq3Range(-99, 0, -5, -99) was Correct
countEvenInSeq3Range(-99, 0, -5, 0) was Correct
countEvenInSeq3Range(-99, 0, -5, 105) was Correct
countEvenInSeq3Range(-99, 0, 0, -99) was Correct
countEvenInSeq3Range(-99, 0, 0, 0) was Correct
countEvenInSeq3Range(-99, 0, 0, 105) was Correct
countEvenInSeq3Range(-99, 0, 20, -99) was Correct
countEvenInSeq3Range(-99, 0, 20, 0) was Correct
countEvenInSeq3Range(-99, 0, 20, 105) was Correct
countEvenInSeq3Range(-99, 100, -5, -99) was Correct
countEvenInSeq3Range(-99, 100, -5, 0) was Correct
countEvenInSeq3Range(-99, 100, -5, 105) was Correct
countEvenInSeq3Range(-99, 100, 0, -99) was Correct
countEvenInSeq3Range(-99, 100, 0, 0) was Correct
countEvenInSeq3Range(-99, 100, 0, 105) was Correct
countEvenInSeq3Range(-99, 100, 20, -99) was Correct
countEvenInSeq3Range(-99, 100, 20, 0) was Correct
countEvenInSeq3Range(-99, 100, 20, 105) was Correct
countEvenInSeq3Range(0, -100, -5, -99) was Correct
countEvenInSeq3Range(0, -100, -5, 0) was Correct
countEvenInSeq3Range(0, -100, -5, 105) was Correct
countEvenInSeq3Range(0, -100, 0, -99) was Correct
countEvenInSeq3Range(0, -100, 0, 0) was Correct
countEvenInSeq3Range(0, -100, 0, 105) was Correct
countEvenInSeq3Range(0, -100, 20, -99) was Correct
countEvenInSeq3Range(0, -100, 20, 0) was Correct
countEvenInSeq3Range(0, -100, 20, 105) was Correct
countEvenInSeq3Range(0, 0, -5, -99) was Correct
countEvenInSeq3Range(0, 0, -5, 0) was Correct
countEvenInSeq3Range(0, 0, -5, 105) was Correct
countEvenInSeq3Range(0, 0, 0, -99) was Correct
countEvenInSeq3Range(0, 0, 0, 0) was Correct
countEvenInSeq3Range(0, 0, 0, 105) was Correct
countEvenInSeq3Range(0, 0, 20, -99) was Correct
countEvenInSeq3Range(0, 0, 20, 0) was Correct
countEvenInSeq3Range(0, 0, 20, 105) was Correct
countEvenInSeq3Range(0, 100, -5, -99) was Correct
countEvenInSeq3Range(0, 100, -5, 0) was Correct
countEvenInSeq3Range(0, 100, -5, 105) was Correct
countEvenInSeq3Range(0, 100, 0, -99) was Correct
countEvenInSeq3Range(0, 100, 0, 0) was Correct
countEvenInSeq3Range(0, 100, 0, 105) was Correct
countEvenInSeq3Range(0, 100, 20, -99) was Correct
countEvenInSeq3Range(0, 100, 20, 0) was Correct
countEvenInSeq3Range(0, 100, 20, 105) was Correct
countEvenInSeq3Range(99, -100, -5, -99) was Correct
countEvenInSeq3Range(99, -100, -5, 0) was Correct
countEvenInSeq3Range(99, -100, -5, 105) was Correct
countEvenInSeq3Range(99, -100, 0, -99) was Correct
countEvenInSeq3Range(99, -100, 0, 0) was Correct
countEvenInSeq3Range(99, -100, 0, 105) was Correct
countEvenInSeq3Range(99, -100, 20, -99) was Correct
countEvenInSeq3Range(99, -100, 20, 0) was Correct
countEvenInSeq3Range(99, -100, 20, 105) was Correct
countEvenInSeq3Range(99, 0, -5, -99) was Correct
countEvenInSeq3Range(99, 0, -5, 0) was Correct
countEvenInSeq3Range(99, 0, -5, 105) was Correct
countEvenInSeq3Range(99, 0, 0, -99) was Correct
countEvenInSeq3Range(99, 0, 0, 0) was Correct
countEvenInSeq3Range(99, 0, 0, 105) was Correct
countEvenInSeq3Range(99, 0, 20, -99) was Correct
countEvenInSeq3Range(99, 0, 20, 0) was Correct
countEvenInSeq3Range(99, 0, 20, 105) was Correct
countEvenInSeq3Range(99, 100, -5, -99) was Correct
countEvenInSeq3Range(99, 100, -5, 0) was Correct
countEvenInSeq3Range(99, 100, -5, 105) was Correct
countEvenInSeq3Range(99, 100, 0, -99) was Correct
countEvenInSeq3Range(99, 100, 0, 0) was Correct
countEvenInSeq3Range(99, 100, 0, 105) was Correct
countEvenInSeq3Range(99, 100, 20, -99) was Correct
countEvenInSeq3Range(99, 100, 20, 0) was Correct
countEvenInSeq3Range(99, 100, 20, 105) was Correct
Step 3 Summary:
   Part A (seq3):                45 / 45 [10 pts]
   Part B+D (main):               6 / 10 [ 6 pts]
   Part C (sumSeq):              81 / 81 [14 pts]
Code compiled without warnings: YES      [ 3 pts]
=================================================
Step 3 Total:                              33/37     
=================================================
-----------------------------------
Functionality:  93 points / 100
------------------------------------
Code quality:
 - Format:      3 / 3
 - Comments:    1 / 3
 - Abstraction: 2 / 2
 - Other:       2 / 2
 Notes from your Instructor:
Formatting is good. You should comment your code. Returning EXIT_SUCCESS makes your code more portable.
------------------------------
Total quality:   8 / 10
------------------------------
Overall grade = functionality *0.9 + quality

Overall Grade: 91.7
